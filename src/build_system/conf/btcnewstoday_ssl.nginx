# proxy_cache_path /data/nginx/cache keys_zone=mycache:10m;

upstream front {
        server 127.0.0.1:3000;
        server btcnewstoday.s3-website.us-east-2.amazonaws.com backup;
}

server {
    # proxy_cache mycache;

    server_name {HOSTNAME};

    location / {
        proxy_pass http://front;
        proxy_intercept_errors on;
        proxy_redirect off;
#        proxy_set_header Host $upstream_addr;
        proxy_set_header Host btcnewstoday.s3-website.us-east-2.amazonaws.com;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_hide_header x-amz-id-2;
        proxy_hide_header x-amz-request-id;
    }

    location /openapi.json {
        proxy_pass http://127.0.0.1:8000/openapi.json;
    }

    location /docs {
        proxy_pass http://127.0.0.1:8000/docs;
    }

    location /token {
        proxy_pass http://127.0.0.1:8000/token;
        proxy_pass_request_headers      on;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    location /api/ {
        proxy_pass http://127.0.0.1:8000;
        proxy_pass_request_headers      on;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/{HOSTNAME}/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/{HOSTNAME}/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}



server {
    if ($host = {HOSTNAME}) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    listen 80;

    server_name {HOSTNAME};
    return 404; # managed by Certbot
}